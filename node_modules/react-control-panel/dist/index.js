(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["react-control-panel"] = factory(require("react"));
	else
		root["react-control-panel"] = factory(root["React"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 29);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(8)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

(function(root) {
  'use strict';

  function isNumeric(v, opts) {
    if (!(opts instanceof Object)) {
      opts = {
        trim: true
      }
    }
    if (typeof v === 'number' && !isNaN(v)) return true;
    v = (v||'').toString()
    if ('trim' in opts && !opts.trim) {
      return !/\s/.test(v)
    }
    v = v.trim()
    if (!v) return false;
    return !isNaN(v);
  }

  if (true) {
    if ( true && module.exports) {
      exports = module.exports = isNumeric;
    }
    exports.isNumeric = isNumeric;
  } else {}

})(this);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var rng = __webpack_require__(10);
var bytesToUuid = __webpack_require__(11);

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof(options) == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6] = (rnds[6] & 0x0f) | 0x40;
  rnds[8] = (rnds[8] & 0x3f) | 0x80;

  // Copy bytes to buffer, if provided
  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var strValue = String.prototype.valueOf;
var tryStringObject = function tryStringObject(value) {
	try {
		strValue.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var strClass = '[object String]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isString(value) {
	if (typeof value === 'string') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function() {

var Emitter = __webpack_require__(12);
var isNumber = __webpack_require__(13);
var tinycolor = __webpack_require__(16);
var transform = __webpack_require__(17);

/**
 * Creates a new SimpleColorPicker
 * @param {Object} options
 * @param {String|Number|Object} options.color The default color that the picker will display. Default is #FFFFFF. It can be a hexadecimal number or an hex String.
 * @param {String|Number|Object} options.background The background color of the picker. Default is transparent. It can be a hexadecimal number or an hex String.
 * @param {HTMLElement} options.el A dom node to add the picker to. You can also use `colorPicker.appendTo(domNode)` afterwards if you prefer.
 * @param {Number} options.width Desired width of the color picker. Default is 175.
 * @param {Number} options.height Desired height of the color picker. Default is 150.
 */
function SimpleColorPicker(options) {
  // Options
  options = options || {};

  // Properties
  this.color = null;
  this.width = 0;
  this.widthUnits = 'px';
  this.height = 0;
  this.heightUnits = 'px';
  this.hue = 0;
  this.position = {x: 0, y: 0};
  this.huePosition = 0;
  this.saturationWidth = 0;
  this.hueHeight = 0;
  this.maxHue = 0;
  this.inputIsNumber = false;

  // Bind methods to scope (if needed)
  this._onSaturationMouseDown = this._onSaturationMouseDown.bind(this);
  this._onSaturationMouseMove = this._onSaturationMouseMove.bind(this);
  this._onSaturationMouseUp = this._onSaturationMouseUp.bind(this);
  this._onHueMouseDown = this._onHueMouseDown.bind(this);
  this._onHueMouseMove = this._onHueMouseMove.bind(this);
  this._onHueMouseUp = this._onHueMouseUp.bind(this);

  // Create DOM
  this.$el = document.createElement('div');
  this.$el.className = 'Scp';
  this.$el.innerHTML = [
    '<div class="Scp-saturation">',
      '<div class="Scp-brightness"></div>',
      '<div class="Scp-sbSelector"></div>',
    '</div>',
    '<div class="Scp-hue">',
      '<div class="Scp-hSelector"></div>',
    '</div>'
  ].join('');

  // DOM accessors
  this.$saturation = this.$el.querySelector('.Scp-saturation');
  this.$hue = this.$el.querySelector('.Scp-hue');
  this.$sbSelector = this.$el.querySelector('.Scp-sbSelector');
  this.$hSelector = this.$el.querySelector('.Scp-hSelector');

  // Event listeners
  this.$saturation.addEventListener('mousedown', this._onSaturationMouseDown);
  this.$saturation.addEventListener('touchstart', this._onSaturationMouseDown);
  this.$hue.addEventListener('mousedown', this._onHueMouseDown);
  this.$hue.addEventListener('touchstart', this._onHueMouseDown);

  // Some styling and DOMing from options
  if (options.el) {
    this.appendTo(options.el);
  }
  if (options.background) {
    this.setBackgroundColor(options.background);
  }
  if (options.widthUnits) {
    this.widthUnits = options.widthUnits;
  }
  if (options.heightUnits) {
    this.heightUnits = options.heightUnits;
  }
  this.setSize(options.width || 175, options.height || 150);
  this.setColor(options.color);

  return this;
}

Emitter(SimpleColorPicker.prototype);

/* =============================================================================
  Public API
============================================================================= */
/**
 * Add the SimpleColorPicker instance to a DOM element.
 * @param  {HTMLElement} el
 * @return {SimpleColorPicker} Returns itself for chaining purpose
 */
SimpleColorPicker.prototype.appendTo = function(el) {
  el.appendChild(this.$el);
  return this;
};

/**
 * Removes picker from its parent and kill all listeners.
 * Call this method for proper destroy.
 */
SimpleColorPicker.prototype.remove = function() {
  this._onSaturationMouseUp();
  this._onHueMouseUp();

  this.$saturation.removeEventListener('mousedown', this._onSaturationMouseDown);
  this.$saturation.removeEventListener('touchstart', this._onSaturationMouseDown);
  this.$hue.removeEventListener('mousedown', this._onHueMouseDown);
  this.$hue.removeEventListener('touchstart', this._onHueMouseDown);

  this.off();

  if (this.$el.parentNode) {
    this.$el.parentNode.removeChild(this.$el);
  }
};

/**
 * Manually set the current color of the picker. This is the method
 * used on instantiation to convert `color` option to actual color for
 * the picker. Param can be a hexadecimal number or an hex String.
 * @param {String|Number} color hex color desired
 * @return {SimpleColorPicker} Returns itself for chaining purpose
 */
SimpleColorPicker.prototype.setColor = function(color) {
  if(isNumber(color)) {
    this.inputIsNumber = true;
    color = numberToHex(color);
  } else {
    this.inputIsNumber = false;
  }
  this.color = tinycolor(color);

  var hsvColor = this.color.toHsv();

  if(!isNaN(hsvColor.h)) {
    this.hue = hsvColor.h;
  }

  this._moveSelectorTo(this.saturationWidth * hsvColor.s, (1 - hsvColor.v) * this.hueHeight);
  this._moveHueTo((1 - (this.hue / 360)) * this.hueHeight);

  this._updateHue();
  return this;
};

/**
 * Set size of the color picker for a given width and height. Note that
 * a padding of 5px will be added if you chose to use the background option
 * of the constructor.
 * @param {Number} width
 * @param {Number} height
 * @return {SimpleColorPicker} Returns itself for chaining purpose
 */
SimpleColorPicker.prototype.setSize = function(width, height) {
  this.width = width;
  this.height = height;
  this.$el.style.width = this.width + this.widthUnits;
  this.$el.style.height = this.height + this.heightUnits;

  this.saturationWidth = this.width - 25;
  this.$saturation.style.width = this.saturationWidth + 'px';

  this.hueHeight = this.height;
  this.maxHue = this.hueHeight - 2;

  return this;
};

/**
 * Set the background color of the picker. It also adds a 5px padding
 * for design purpose.
 * @param {String|Number} color hex color desired for background
 * @return {SimpleColorPicker} Returns itself for chaining purpose
 */
SimpleColorPicker.prototype.setBackgroundColor = function(color) {
  if(isNumber(color)) {
    color = numberToHex(color);
  }
  this.$el.style.padding = '5px';
  this.$el.style.background = tinycolor(color).toHexString();
  return this;
};

/**
 * Removes background of the picker if previously set. It's no use
 * calling this method if you didn't set the background option on start
 * or if you didn't call setBackgroundColor previously.
 */
SimpleColorPicker.prototype.setNoBackground = function() {
  this.$el.style.padding = '0px';
  this.$el.style.background = 'none';
};

/**
 * Registers callback to the update event of the picker.
 * picker inherits from [component/emitter](https://github.com/component/emitter)
 * so you could do the same thing by calling `colorPicker.on('update');`
 * @param  {Function} callback
 * @return {SimpleColorPicker} Returns itself for chaining purpose
 */
SimpleColorPicker.prototype.onChange = function(callback) {
  this.on('update', callback);
  this.emit('update', this.getHexString());
  return this;
};

/* =============================================================================
  Color getters
============================================================================= */
/**
 * Main color getter, will return a formatted color string depending on input
 * or a number depending on the last setColor call.
 * @return {Number|String}
 */
SimpleColorPicker.prototype.getColor = function() {
  if(this.inputIsNumber) {
    return this.getHexNumber();
  }
  return this.color.toString();
};

/**
 * Returns color as css hex string (ex: '#FF0000').
 * @return {String}
 */
SimpleColorPicker.prototype.getHexString = function() {
  return this.color.toHexString().toUpperCase();
};

/**
 * Returns color as number (ex: 0xFF0000).
 * @return {Number}
 */
SimpleColorPicker.prototype.getHexNumber = function() {
  return parseInt(this.color.toHex(), 16);
};

/**
 * Returns color as {r: 255, g: 0, b: 0} object.
 * @return {Object}
 */
SimpleColorPicker.prototype.getRGB = function() {
  return this.color.toRgb();
};

/**
 * Returns color as {h: 100, s: 1, v: 1} object.
 * @return {Object}
 */
SimpleColorPicker.prototype.getHSV = function() {
  return this.color.toHsv();
};

/**
 * Returns true if color is perceived as dark
 * @return {Boolean}
 */
SimpleColorPicker.prototype.isDark = function() {
  return this.color.isDark();
};

/**
 * Returns true if color is perceived as light
 * @return {Boolean}
 */
SimpleColorPicker.prototype.isLight = function() {
  return this.color.isLight();
};

/* =============================================================================
  "Private" methods
============================================================================= */
SimpleColorPicker.prototype._moveSelectorTo = function(x, y) {
  this.position.x = clamp(x, 0, this.saturationWidth);
  this.position.y = clamp(y, 0, this.hueHeight);

  transform(this.$sbSelector, {
    x: this.position.x,
    y: this.position.y
  });
};

SimpleColorPicker.prototype._updateColorFromPosition = function() {
  this.color = tinycolor({h: this.hue, s: this.position.x / this.saturationWidth, v: 1 - (this.position.y / this.hueHeight)});
  this._updateColor();
};

SimpleColorPicker.prototype._moveHueTo = function(y) {
  this.huePosition = clamp(y, 0, this.maxHue);

  transform(this.$hSelector, {
    y: this.huePosition
  });
};

SimpleColorPicker.prototype._updateHueFromPosition = function() {
  var hsvColor = this.color.toHsv();
  this.hue = 360 * (1 - (this.huePosition / this.maxHue));
  this.color = tinycolor({h: this.hue, s: hsvColor.s, v: hsvColor.v});
  this._updateHue();
};

SimpleColorPicker.prototype._updateHue = function() {
  var hueColor = tinycolor({h: this.hue, s: 1, v: 1});
  this.$saturation.style.background = 'linear-gradient(to right, #fff, ' + hueColor.toHexString() + ')';
  this._updateColor();
};

SimpleColorPicker.prototype._updateColor = function() {
  this.$sbSelector.style.background = this.color.toHexString();
  this.$sbSelector.style.borderColor = this.color.isDark() ? '#fff' : '#000';
  this.emit('update', this.color.toHexString());
};

/* =============================================================================
  Events handlers
============================================================================= */
SimpleColorPicker.prototype._onSaturationMouseDown = function(e) {
  var sbOffset = this.$saturation.getBoundingClientRect();
  var xPos = getMousePosition(e).x;
  var yPos = getMousePosition(e).y;
  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);
  this._updateColorFromPosition();
  window.addEventListener('mouseup', this._onSaturationMouseUp);
  window.addEventListener('touchend', this._onSaturationMouseUp);
  window.addEventListener('mousemove', this._onSaturationMouseMove);
  window.addEventListener('touchmove', this._onSaturationMouseMove);
  e.preventDefault();
};

SimpleColorPicker.prototype._onSaturationMouseMove = function(e) {
  var sbOffset = this.$saturation.getBoundingClientRect();
  var xPos = getMousePosition(e).x;
  var yPos = getMousePosition(e).y;
  this._moveSelectorTo(xPos - sbOffset.left, yPos - sbOffset.top);
  this._updateColorFromPosition();
};

SimpleColorPicker.prototype._onSaturationMouseUp = function() {
  window.removeEventListener('mouseup', this._onSaturationMouseUp);
  window.removeEventListener('touchend', this._onSaturationMouseUp);
  window.removeEventListener('mousemove', this._onSaturationMouseMove);
  window.removeEventListener('touchmove', this._onSaturationMouseMove);
};

SimpleColorPicker.prototype._onHueMouseDown = function(e) {
  var hOffset = this.$hue.getBoundingClientRect();
  var yPos = getMousePosition(e).y;
  this._moveHueTo(yPos - hOffset.top);
  this._updateHueFromPosition();
  window.addEventListener('mouseup', this._onHueMouseUp);
  window.addEventListener('touchend', this._onHueMouseUp);
  window.addEventListener('mousemove', this._onHueMouseMove);
  window.addEventListener('touchmove', this._onHueMouseMove);
  e.preventDefault();
};

SimpleColorPicker.prototype._onHueMouseMove = function(e) {
  var hOffset = this.$hue.getBoundingClientRect();
  var yPos = getMousePosition(e).y;
  this._moveHueTo(yPos - hOffset.top);
  this._updateHueFromPosition();
};

SimpleColorPicker.prototype._onHueMouseUp = function() {
  window.removeEventListener('mouseup', this._onHueMouseUp);
  window.removeEventListener('touchend', this._onHueMouseUp);
  window.removeEventListener('mousemove', this._onHueMouseMove);
  window.removeEventListener('touchmove', this._onHueMouseMove);
};

/* =============================================================================
  Helper functions
============================================================================= */
function clamp(value, min, max) {
  return Math.min(Math.max(value, min), max);
}

function getMousePosition(e) {
  e = (e.type.indexOf('touch') === 0) ? e.touches[0] : e;
  return {
    x: e.clientX,
    y: e.clientY
  };
}

function numberToHex(color) {
  return color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);
}

if ( true && module.exports) {
  module.exports = SimpleColorPicker;
}

})();


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(9);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 10 */
/***/ (function(module, exports) {

// Unique ID creation requires a high quality random # generator.  In the
// browser this is a little complicated due to unknown quality of Math.random()
// and inconsistent support for the `crypto` API.  We do the best we can via
// feature-detection

// getRandomValues needs to be invoked in a context where "this" is a Crypto
// implementation. Also, find the complete implementation of crypto on IE11.
var getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||
                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));

if (getRandomValues) {
  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

  module.exports = function whatwgRNG() {
    getRandomValues(rnds8);
    return rnds8;
  };
} else {
  // Math.random()-based (RNG)
  //
  // If all else fails, use Math.random().  It's fast, but is of unspecified
  // quality.
  var rnds = new Array(16);

  module.exports = function mathRNG() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}


/***/ }),
/* 11 */
/***/ (function(module, exports) {

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
  return ([
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]]
  ]).join('');
}

module.exports = bytesToUuid;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  // Remove event specific arrays for event types that no
  // one is subscribed for to avoid memory leak.
  if (callbacks.length === 0) {
    delete this._callbacks['$' + event];
  }

  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};

  var args = new Array(arguments.length - 1)
    , callbacks = this._callbacks['$' + event];

  for (var i = 1; i < arguments.length; i++) {
    args[i - 1] = arguments[i];
  }

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



var typeOf = __webpack_require__(14);

module.exports = function isNumber(num) {
  var type = typeOf(num);

  if (type === 'string') {
    if (!num.trim()) return false;
  } else if (type !== 'number') {
    return false;
  }

  return (num - num + 1) >= 0;
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var isBuffer = __webpack_require__(15);
var toString = Object.prototype.toString;

/**
 * Get the native `typeof` a value.
 *
 * @param  {*} `val`
 * @return {*} Native javascript type
 */

module.exports = function kindOf(val) {
  // primitivies
  if (typeof val === 'undefined') {
    return 'undefined';
  }
  if (val === null) {
    return 'null';
  }
  if (val === true || val === false || val instanceof Boolean) {
    return 'boolean';
  }
  if (typeof val === 'string' || val instanceof String) {
    return 'string';
  }
  if (typeof val === 'number' || val instanceof Number) {
    return 'number';
  }

  // functions
  if (typeof val === 'function' || val instanceof Function) {
    return 'function';
  }

  // array
  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {
    return 'array';
  }

  // check for instances of RegExp and Date before calling `toString`
  if (val instanceof RegExp) {
    return 'regexp';
  }
  if (val instanceof Date) {
    return 'date';
  }

  // other objects
  var type = toString.call(val);

  if (type === '[object RegExp]') {
    return 'regexp';
  }
  if (type === '[object Date]') {
    return 'date';
  }
  if (type === '[object Arguments]') {
    return 'arguments';
  }
  if (type === '[object Error]') {
    return 'error';
  }

  // buffer
  if (isBuffer(val)) {
    return 'buffer';
  }

  // es6: Map, WeakMap, Set, WeakSet
  if (type === '[object Set]') {
    return 'set';
  }
  if (type === '[object WeakSet]') {
    return 'weakset';
  }
  if (type === '[object Map]') {
    return 'map';
  }
  if (type === '[object WeakMap]') {
    return 'weakmap';
  }
  if (type === '[object Symbol]') {
    return 'symbol';
  }

  // typed arrays
  if (type === '[object Int8Array]') {
    return 'int8array';
  }
  if (type === '[object Uint8Array]') {
    return 'uint8array';
  }
  if (type === '[object Uint8ClampedArray]') {
    return 'uint8clampedarray';
  }
  if (type === '[object Int16Array]') {
    return 'int16array';
  }
  if (type === '[object Uint16Array]') {
    return 'uint16array';
  }
  if (type === '[object Int32Array]') {
    return 'int32array';
  }
  if (type === '[object Uint32Array]') {
    return 'uint32array';
  }
  if (type === '[object Float32Array]') {
    return 'float32array';
  }
  if (type === '[object Float64Array]') {
    return 'float64array';
  }

  // must be a plain object
  return 'object';
};


/***/ }),
/* 15 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License

(function(Math) {

var trimLeft = /^\s+/,
    trimRight = /\s+$/,
    tinyCounter = 0,
    mathRound = Math.round,
    mathMin = Math.min,
    mathMax = Math.max,
    mathRandom = Math.random;

function tinycolor (color, opts) {

    color = (color) ? color : '';
    opts = opts || { };

    // If input is already a tinycolor, return itself
    if (color instanceof tinycolor) {
       return color;
    }
    // If we are called as a function, call using new instead
    if (!(this instanceof tinycolor)) {
        return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._originalInput = color,
    this._r = rgb.r,
    this._g = rgb.g,
    this._b = rgb.b,
    this._a = rgb.a,
    this._roundA = mathRound(100*this._a) / 100,
    this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;

    // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by `inputToRgb`
    if (this._r < 1) { this._r = mathRound(this._r); }
    if (this._g < 1) { this._g = mathRound(this._g); }
    if (this._b < 1) { this._b = mathRound(this._b); }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
}

tinycolor.prototype = {
    isDark: function() {
        return this.getBrightness() < 128;
    },
    isLight: function() {
        return !this.isDark();
    },
    isValid: function() {
        return this._ok;
    },
    getOriginalInput: function() {
      return this._originalInput;
    },
    getFormat: function() {
        return this._format;
    },
    getAlpha: function() {
        return this._a;
    },
    getBrightness: function() {
        //http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    },
    getLuminance: function() {
        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var RsRGB, GsRGB, BsRGB, R, G, B;
        RsRGB = rgb.r/255;
        GsRGB = rgb.g/255;
        BsRGB = rgb.b/255;

        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}
        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}
        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}
        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);
    },
    setAlpha: function(value) {
        this._a = boundAlpha(value);
        this._roundA = mathRound(100*this._a) / 100;
        return this;
    },
    toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
    },
    toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return (this._a == 1) ?
          "hsv("  + h + ", " + s + "%, " + v + "%)" :
          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
    },
    toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
    },
    toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return (this._a == 1) ?
          "hsl("  + h + ", " + s + "%, " + l + "%)" :
          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
    },
    toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function(allow3Char) {
        return '#' + this.toHex(allow3Char);
    },
    toHex8: function(allow4Char) {
        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function(allow4Char) {
        return '#' + this.toHex8(allow4Char);
    },
    toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
    },
    toRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function() {
        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
    },
    toPercentageRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
          "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function() {
        if (this._a === 0) {
            return "transparent";
        }

        if (this._a < 1) {
            return false;
        }

        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function(secondColor) {
        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";

        if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
        }

        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
    },
    toString: function(format) {
        var formatSet = !!format;
        format = format || this._format;

        var formattedString = false;
        var hasAlpha = this._a < 1 && this._a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === "name" && this._a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === "rgb") {
            formattedString = this.toRgbString();
        }
        if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
        }
        if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
        }
        if (format === "hex3") {
            formattedString = this.toHexString(true);
        }
        if (format === "hex4") {
            formattedString = this.toHex8String(true);
        }
        if (format === "hex8") {
            formattedString = this.toHex8String();
        }
        if (format === "name") {
            formattedString = this.toName();
        }
        if (format === "hsl") {
            formattedString = this.toHslString();
        }
        if (format === "hsv") {
            formattedString = this.toHsvString();
        }

        return formattedString || this.toHexString();
    },
    clone: function() {
        return tinycolor(this.toString());
    },

    _applyModification: function(fn, args) {
        var color = fn.apply(null, [this].concat([].slice.call(args)));
        this._r = color._r;
        this._g = color._g;
        this._b = color._b;
        this.setAlpha(color._a);
        return this;
    },
    lighten: function() {
        return this._applyModification(lighten, arguments);
    },
    brighten: function() {
        return this._applyModification(brighten, arguments);
    },
    darken: function() {
        return this._applyModification(darken, arguments);
    },
    desaturate: function() {
        return this._applyModification(desaturate, arguments);
    },
    saturate: function() {
        return this._applyModification(saturate, arguments);
    },
    greyscale: function() {
        return this._applyModification(greyscale, arguments);
    },
    spin: function() {
        return this._applyModification(spin, arguments);
    },

    _applyCombination: function(fn, args) {
        return fn.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function() {
        return this._applyCombination(analogous, arguments);
    },
    complement: function() {
        return this._applyCombination(complement, arguments);
    },
    monochromatic: function() {
        return this._applyCombination(monochromatic, arguments);
    },
    splitcomplement: function() {
        return this._applyCombination(splitcomplement, arguments);
    },
    triad: function() {
        return this._applyCombination(triad, arguments);
    },
    tetrad: function() {
        return this._applyCombination(tetrad, arguments);
    }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function(color, opts) {
    if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
            if (color.hasOwnProperty(i)) {
                if (i === "a") {
                    newColor[i] = color[i];
                }
                else {
                    newColor[i] = convertToPercentage(color[i]);
                }
            }
        }
        color = newColor;
    }

    return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {

    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
        color = stringInputToObject(color);
    }

    if (typeof color == "object") {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = "hsv";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = "hsl";
        }

        if (color.hasOwnProperty("a")) {
            a = color.a;
        }
    }

    a = boundAlpha(a);

    return {
        ok: ok,
        format: color.format || format,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a: a
    };
}


// Conversion Functions
// --------------------

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b){
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
    };
}

// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, l = (max + min) / 2;

    if(max == min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
    }

    return { h: h, s: s, l: l };
}

// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
    var r, g, b;

    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    if(s === 0) {
        r = g = b = l; // achromatic
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1/3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1/3);
    }

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, v = max;

    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if(max == min) {
        h = 0; // achromatic
    }
    else {
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
 function hsvToRgb(h, s, v) {

    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);

    var i = Math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    // Return a 3 character hex if possible
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
}

// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
function rgbaToHex(r, g, b, a, allow4Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16)),
        pad2(convertDecimalToHex(a))
    ];

    // Return a 4 character hex if possible
    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }

    return hex.join("");
}

// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function rgbaToArgbHex(r, g, b, a) {

    var hex = [
        pad2(convertDecimalToHex(a)),
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    return hex.join("");
}

// `equals`
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) { return false; }
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};

tinycolor.random = function() {
    return tinycolor.fromRatio({
        r: mathRandom(),
        g: mathRandom(),
        b: mathRandom()
    });
};


// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

function desaturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function saturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function greyscale(color) {
    return tinycolor(color).desaturate(100);
}

function lighten (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

function brighten(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var rgb = tinycolor(color).toRgb();
    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));
    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));
    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));
    return tinycolor(rgb);
}

function darken (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
}

// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

function complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
}

function triad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
    ];
}

function tetrad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
    ];
}

function splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
    ];
}

function analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;

    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor(hsl));
    }
    return ret;
}

function monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
        ret.push(tinycolor({ h: h, s: s, v: v}));
        v = (v + modification) % 1;
    }

    return ret;
}

// Utility Functions
// ---------------------

tinycolor.mix = function(color1, color2, amount) {
    amount = (amount === 0) ? 0 : (amount || 50);

    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();

    var p = amount / 100;

    var rgba = {
        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
        a: ((rgb2.a - rgb1.a) * p) + rgb1.a
    };

    return tinycolor(rgba);
};


// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
tinycolor.readability = function(color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);
};

// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
tinycolor.isReadable = function(color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;

    out = false;

    wcag2Parms = validateWCAG2Parms(wcag2);
    switch (wcag2Parms.level + wcag2Parms.size) {
        case "AAsmall":
        case "AAAlarge":
            out = readability >= 4.5;
            break;
        case "AAlarge":
            out = readability >= 3;
            break;
        case "AAAsmall":
            out = readability >= 7;
            break;
    }
    return out;

};

// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
tinycolor.mostReadable = function(baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size ;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors ;
    level = args.level;
    size = args.size;

    for (var i= 0; i < colorList.length ; i++) {
        readability = tinycolor.readability(baseColor, colorList[i]);
        if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
        }
    }

    if (tinycolor.isReadable(baseColor, bestColor, {"level":level,"size":size}) || !includeFallbackColors) {
        return bestColor;
    }
    else {
        args.includeFallbackColors=false;
        return tinycolor.mostReadable(baseColor,["#fff", "#000"],args);
    }
};


// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
};

// Make it easy to access colors via `hexNames[hex]`
var hexNames = tinycolor.hexNames = flip(names);


// Utilities
// ---------

// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function flip(o) {
    var flipped = { };
    for (var i in o) {
        if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
        }
    }
    return flipped;
}

// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }

    return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
    if (isOnePointZero(n)) { n = "100%"; }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n)));

    // Automatically convert percentage into number
    if (processPercent) {
        n = parseInt(n * max, 10) / 100;
    }

    // Handle floating point rounding errors
    if ((Math.abs(n - max) < 0.000001)) {
        return 1;
    }

    // Convert into [0, 1] range if it isn't already
    return (n % max) / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
    return mathMin(1, mathMax(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
    return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
    if (n <= 1) {
        n = (n * 100) + "%";
    }

    return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
    return (parseIntFromHex(h) / 255);
}

var matchers = (function() {

    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?";

    // <http://www.w3.org/TR/css3-values/#number-value>
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

    // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

    return {
        CSS_UNIT: new RegExp(CSS_UNIT),
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
})();

// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
}

// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function stringInputToObject(color) {

    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();
    var named = false;
    if (names[color]) {
        color = names[color];
        named = true;
    }
    else if (color == 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: "name" };
    }

    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match;
    if ((match = matchers.rgb.exec(color))) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    if ((match = matchers.rgba.exec(color))) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    if ((match = matchers.hsl.exec(color))) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    if ((match = matchers.hsla.exec(color))) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    if ((match = matchers.hsv.exec(color))) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    if ((match = matchers.hsva.exec(color))) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
        };
    }
    if ((match = matchers.hex4.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            a: convertHexToDecimal(match[4] + '' + match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: named ? "name" : "hex"
        };
    }

    return false;
}

function validateWCAG2Parms(parms) {
    // return valid WCAG2 parms for isReadable.
    // If input parms are invalid, return {"level":"AA", "size":"small"}
    var level, size;
    parms = parms || {"level":"AA", "size":"small"};
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();
    if (level !== "AA" && level !== "AAA") {
        level = "AA";
    }
    if (size !== "small" && size !== "large") {
        size = "small";
    }
    return {"level":level, "size":size};
}

// Node: Export function
if ( true && module.exports) {
    module.exports = tinycolor;
}
// AMD/requirejs: Define the module
else if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}
// Browser: Expose to window
else {}

})(Math);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var prefix = __webpack_require__(18);
var isArray = __webpack_require__(19);
var properties = __webpack_require__(20);
var applyDefaultUnit = __webpack_require__(21);

var _has = Object.prototype.hasOwnProperty;
var transformProp = prefix('transform');
var propNameAliases = {
  x: 'translateX',
  y: 'translateY',
  z: 'translateZ',
  origin: 'transformOrigin'
};

exports = module.exports = transform;
function transform(target, opts) {
  var transformOutput = [];
  var propName;
  var propValue;
  var propData;

  replaceAliases(opts);

  for (propName in opts) {
    if (!_has.call(opts, propName)) continue;

    propValue = opts[propName];

    // If it's a transform property.
    if (_has.call(properties.transform, propName)) {
      propData = properties.transform[propName];

      if (isArray(propValue)) {
        propValue = propValue.join(propData.separator);
      }

      transformOutput.push(
        propName + '(' + applyDefaultUnit(
          propValue,
          propData.defaultUnit,
          propData.separator
        ) + ')'
      );

      continue;
    }

    // For other properties like transform-origin.
    if (_has.call(properties, propName)) {
      propData = properties[propName];

      if (isArray(propValue)) {
        propValue = propValue.join(propData.separator);
      }

      target.style[prefix(propName)] = applyDefaultUnit(
        propValue,
        propData.defaultUnit,
        propData.separator
      );

      continue;
    }

    console.warn(
      'dom-transform: this property (`' + propName + '`) is not supported.'
    );
  }

  // Apply transform property values.
  target.style[transformProp] = transformOutput.join(' ');
}

exports.get = get;
function get(target, props) {
  var s = target.style;

  if (typeof props === 'string') {
    if (_has.call(properties.transform, props)) {
      return s[transformProp];
    }

    return s[prefix(props)];
  }

  if (!props) {
    props = getPropertiesName();
  }

  var values = {};
  props.forEach(function(propName) {
    values[propName] = s[prefix(propName)];
  });

  return values;
}

exports.reset = reset;
function reset(target, props) {
  var s = target.style;

  if (typeof props === 'string') {
    s[prefix(props)] = null;
    return;
  }

  if (!props) {
    props = getPropertiesName();
  }

  props.forEach(function(propName) {
    s[prefix(propName)] = null;
  });
}

exports.isSupported = isSupported;
function isSupported() {
  return transformProp.length > 0;
}

function replaceAliases(obj) {
  var propName;
  for (propName in obj) {
    if (_has.call(propNameAliases, propName)) {
      obj[propNameAliases[propName]] = obj[propName];
      delete obj[propName];
    }
  }
}

function getPropertiesName() {
  return Object.keys(properties).map(function(propName) {
    return propName;
  });
}


/***/ }),
/* 18 */
/***/ (function(module, exports) {

// check document first so it doesn't error in node.js
var style = typeof document != 'undefined'
  ? document.createElement('p').style
  : {}

var prefixes = ['O', 'ms', 'Moz', 'Webkit']
var upper = /([A-Z])/g
var memo = {}

/**
 * prefix `key`
 *
 *   prefix('transform') // => WebkitTransform
 *
 * @param {String} key
 * @return {String}
 * @api public
 */
function prefix(key){
  // Camel case
  key = key.replace(/-([a-z])/g, function(_, char){
    return char.toUpperCase()
  })

  // Without prefix
  if (style[key] !== undefined) return key

  // With prefix
  var Key = key.charAt(0).toUpperCase() + key.slice(1)
  var i = prefixes.length
  while (i--) {
    var name = prefixes[i] + Key
    if (style[name] !== undefined) return name
  }

  return key
}

/**
 * Memoized version of `prefix`
 *
 * @param {String} key
 * @return {String}
 * @api public
 */
function prefixMemozied(key){
  return key in memo
    ? memo[key]
    : memo[key] = prefix(key)
}

/**
 * Create a dashed prefix
 *
 * @param {String} key
 * @return {String}
 * @api public
 */
function prefixDashed(key){
  key = prefix(key)
  if (upper.test(key)) {
    key = '-' + key.replace(upper, '-$1')
    upper.lastIndex = 0
  }
  return key.toLowerCase()
}

module.exports = prefixMemozied
module.exports.dash = prefixDashed


/***/ }),
/* 19 */
/***/ (function(module, exports) {


/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  transform: {
    translate: {defaultUnit: 'px'},
    translate3d: {defaultUnit: 'px'},
    translateX: {defaultUnit: 'px'},
    translateY: {defaultUnit: 'px'},
    translateZ: {defaultUnit: 'px'},
    scale: {defaultUnit: ''},
    scale3d: {defaultUnit: ''},
    scaleX: {defaultUnit: ''},
    scaleY: {defaultUnit: ''},
    scaleZ: {defaultUnit: ''},
    rotate: {defaultUnit: 'deg'},
    rotate3d: {defaultUnit: ''},
    rotateX: {defaultUnit: 'deg'},
    rotateY: {defaultUnit: 'deg'},
    rotateZ: {defaultUnit: 'deg'},
    skew: {defaultUnit: 'deg'},
    skewX: {defaultUnit: 'deg'},
    skewY: {defaultUnit: 'deg'},
    perspective: {defaultUnit: 'px'},
    matrix: {defaultUnit: ''},
    matrix3d: {defaultUnit: ''}
  },

  transformOrigin: {
    defaultUnit: 'px',
    separator: ' '
  }
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var trim = __webpack_require__(22);
var NUMBER_REGEX = /^-?\d+(\.\d+)?$/;

module.exports = function(value, unit, separator) {
  separator = separator || ',';

  if (typeof value === 'number') {
    return '' + value + unit;
  }

  // Allow to use either the defined separator or space
  // to delimitate the values.
  // Ex: '10 10' or '10, 10'.
  var separatorRegExp = new RegExp(separator, 'g');
  var values = value.split(separatorRegExp.test(value) ? separator : ' ');

  return values.map(function(v) {
    v = trim(v);

    if (NUMBER_REGEX.test(v)) {
      v += unit;
    }

    return v;
  }).join(separator);
};


/***/ }),
/* 22 */
/***/ (function(module, exports) {


exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(4);
            var content = __webpack_require__(24);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);

var exported = content.locals ? content.locals : {};



module.exports = exported;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(5);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".control-panel-interval {\n  -webkit-appearance: none;\n  position: absolute;\n  height: 20px;\n  margin: 0px 0;\n  width: 33%;\n  left: 52.5%;\n  cursor: ew-resize;\n\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.control-panel-interval .control-panel-interval-handle {\n  position: absolute;\n  height: 20px;\n  min-width: 1px;\n}\n\n.control-panel-interval-dragging * {\n  -webkit-touch-callout: none !important;\n  -webkit-user-select: none !important;\n  -khtml-user-select: none !important;\n  -moz-user-select: none !important;\n  -ms-user-select: none !important;\n  user-select: none !important;\n\n  cursor: ew-resize !important;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(4);
            var content = __webpack_require__(26);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);

var exported = content.locals ? content.locals : {};



module.exports = exported;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(5);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".control-panel {\n  font-family: 'Hack', monospace;\n  font-size: 11px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: default;\n  text-align: left;\n  box-sizing: border-box;\n}\n\n.control-panel input {\n  font-family: 'Hack';\n  font-size: 11px;\n}\n\n.control-panel a {\n  color: inherit;\n  text-decoration: none;\n}\n\n.container {\n  position: relative;\n  min-height: 25px;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(4);
            var content = __webpack_require__(28);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);

var exported = content.locals ? content.locals : {};



module.exports = exported;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(5);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".Scp {\n  width: 125px;\n  height: 100px;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  position: relative;\n  z-index: 1000;\n  cursor: pointer;\n}\n.Scp-saturation {\n  position: relative;\n  width: calc(100% - 25px);\n  height: 100%;\n  background: linear-gradient(to right, #fff 0%, #f00 100%);\n  float: left;\n  margin-right: 5px;\n}\n.Scp-brightness {\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to top, #000 0%, rgba(255,255,255,0) 100%);\n}\n.Scp-sbSelector {\n  border: 1px solid;\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  background: #fff;\n  border-radius: 10px;\n  top: -7px;\n  left: -7px;\n  box-sizing: border-box;\n  z-index: 10;\n}\n.Scp-hue {\n  width: 20px;\n  height: 100%;\n  position: relative;\n  float: left;\n  background: linear-gradient(to bottom, #f00 0%, #f0f 17%, #00f 34%, #0ff 50%, #0f0 67%, #ff0 84%, #f00 100%);\n}\n.Scp-hSelector {\n  position: absolute;\n  background: #fff;\n  border-bottom: 1px solid #000;\n  right: -3px;\n  width: 10px;\n  height: 2px;\n}", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external {"root":"React","commonjs":"react","commonjs2":"react","amd":"react"}
var external_root_React_commonjs_react_commonjs2_react_amd_react_ = __webpack_require__(0);
var external_root_React_commonjs_react_commonjs2_react_amd_react_default = /*#__PURE__*/__webpack_require__.n(external_root_React_commonjs_react_commonjs2_react_amd_react_);

// EXTERNAL MODULE: ./node_modules/is-string/index.js
var is_string = __webpack_require__(6);
var is_string_default = /*#__PURE__*/__webpack_require__.n(is_string);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(1);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// CONCATENATED MODULE: ./src/themes.js
/* harmony default export */ var themes = ({
  light: {
    background1: 'rgb(227,227,227)',
    background2: 'rgb(204,204,204)',
    background2hover: 'rgb(208,208,208)',
    foreground1: 'rgb(105,105,105)',
    text1: 'rgb(36,36,36)',
    text2: 'rgb(87,87,87)'
  },
  dark: {
    background1: 'rgb(35,35,35)',
    background2: 'rgb(54,54,54)',
    background2hover: 'rgb(58,58,58)',
    foreground1: 'rgb(112,112,112)',
    text1: 'rgb(235,235,235)',
    text2: 'rgb(161,161,161)'
  }
});
// CONCATENATED MODULE: ./src/components/context.js
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


var ControlPanelContext = external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createContext({});
/* harmony default export */ var components_context = (ControlPanelContext);
var context_withTheme = function withTheme(Comp) {
  return function (_ref) {
    var props = Object.assign({}, _ref);
    return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(ControlPanelContext.Consumer, null, function (_ref2) {
      var theme = _ref2.theme;
      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(Comp, _extends({
        theme: theme
      }, props));
    });
  };
};

var getLabelStyles = function getLabelStyles(theme) {
  return {
    body: {
      left: 0,
      width: '36%',
      display: 'inline-block',
      height: 20,
      paddingRight: '2%',
      verticalAlign: 'top'
    },
    text: {
      color: theme.text1,
      display: 'inline-block',
      verticalAlign: 'sub'
    }
  };
};

var Label = context_withTheme(function (_ref3) {
  var label = _ref3.label,
      theme = _ref3.theme;
  var styles = getLabelStyles(theme);
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
    style: styles.body,
    className: "draggable"
  }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    className: "draggable",
    style: styles.text
  }, label));
});
var context_Container = function Container(_ref4) {
  var label = _ref4.label,
      children = _ref4.children;
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
    className: "container draggable"
  }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(Label, {
    label: label || ''
  }), children);
};
var WithSettingStateWrapper = external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.memo(function (_ref5) {
  var renderContainer = _ref5.renderContainer,
      label = _ref5.label,
      children = _ref5.children;
  return renderContainer ? external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(context_Container, {
    label: label
  }, children) : children;
});
var context_withSettingState = function withSettingState(mapPropsToStyles) {
  return function (Comp) {
    return function (_ref6) {
      var label = _ref6.label,
          props = _objectWithoutProperties(_ref6, ["label"]);

      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(ControlPanelContext.Consumer, null, function (_ref7) {
        var state = _ref7.state,
            setState = _ref7.setState,
            theme = _ref7.theme,
            indicateChange = _ref7.indicateChange;

        var compProps = _objectSpread({}, props, {
          value: state[label],
          onChange: function onChange(newVal) {
            return indicateChange(label, newVal);
          },
          theme: theme
        });

        if (mapPropsToStyles) {
          compProps.styles = mapPropsToStyles(compProps);
        }

        return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(WithSettingStateWrapper, {
          label: label,
          renderContainer: props.renderContainer === false ? false : true
        }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(Comp, compProps));
      });
    };
  };
};
// CONCATENATED MODULE: ./src/components/title.js


/* harmony default export */ var components_title = (context_withTheme(function (_ref) {
  var title = _ref.title,
      theme = _ref.theme;
  var style = {
    width: '100%',
    textAlign: 'center',
    color: theme.text2,
    textTransform: 'uppercase',
    height: 20,
    marginBottom: 4
  };
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
    style: style,
    className: "draggable"
  }, title);
}));
// CONCATENATED MODULE: ./src/components/button.js
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function button_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function button_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { button_ownKeys(Object(source), true).forEach(function (key) { button_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { button_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function button_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var getStyle = function getStyle(theme, _ref) {
  var focused = _ref.focused,
      active = _ref.active,
      hover = _ref.hover;
  var hoverStyle = {
    color: theme.text2,
    backgroundColor: theme.background2hover
  };
  var activeStyle = {
    color: theme.background2,
    backgroundColor: theme.text2
  };
  return button_objectSpread({
    position: 'absolute',
    textAlign: 'center',
    height: 20,
    width: '62%',
    border: 'none',
    cursor: 'pointer',
    right: 0,
    fontFamily: 'inherit',
    color: theme.text2,
    backgroundColor: theme.background2,
    outline: focused ? 'none' : undefined
  }, hover ? hoverStyle : {}, {}, active ? activeStyle : {});
};

var button_UnwrappedButton =
/*#__PURE__*/
function (_React$Component) {
  _inherits(UnwrappedButton, _React$Component);

  function UnwrappedButton() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, UnwrappedButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UnwrappedButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

    button_defineProperty(_assertThisInitialized(_this), "state", {
      focus: false,
      hover: false,
      active: false
    });

    button_defineProperty(_assertThisInitialized(_this), "render", function () {
      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(context_Container, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("button", {
        style: getStyle(_this.props.theme, _this.state),
        onClick: _this.props.action,
        onFocus: function onFocus() {
          return _this.setState({
            focus: true
          });
        },
        onBlur: function onBlur() {
          return _this.setState({
            focus: false
          });
        },
        onMouseEnter: function onMouseEnter() {
          return _this.setState({
            hover: true
          });
        },
        onMouseLeave: function onMouseLeave() {
          return _this.setState({
            hover: false
          });
        },
        onMouseDown: function onMouseDown() {
          _this.setState({
            active: true
          });

          if (_this.props.onmousedown) {
            _this.props.onmousedown();
          }
        },
        onMouseUp: function onMouseUp() {
          _this.setState({
            active: false
          });

          if (_this.props.onmouseup) {
            _this.props.onmouseup();
          }
        }
      }, _this.props.label));
    });

    return _this;
  }

  return UnwrappedButton;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

var Button = context_withTheme(button_UnwrappedButton);
Button.propTypes = {
  action: prop_types_default.a.func,
  onmousedown: prop_types_default.a.func,
  onmouseup: prop_types_default.a.func,
  label: prop_types_default.a.string.isRequired
};
/* harmony default export */ var components_button = (Button);
// EXTERNAL MODULE: ./node_modules/uuid/v4.js
var v4 = __webpack_require__(3);
var v4_default = /*#__PURE__*/__webpack_require__.n(v4);

// CONCATENATED MODULE: ./src/components/checkbox.js
function checkbox_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function checkbox_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { checkbox_ownKeys(Object(source), true).forEach(function (key) { checkbox_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { checkbox_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function checkbox_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var checkbox_Checkbox = function Checkbox(_ref) {
  var theme = _ref.theme,
      checked = _ref.value,
      _onChange = _ref.onChange,
      styles = _ref.styles;
  var id = v4_default()();
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("input", {
    id: id,
    type: "checkbox",
    checked: checked,
    style: styles.checkbox,
    onChange: function onChange() {
      return _onChange(!checked);
    }
  }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("label", {
    htmlFor: id,
    style: styles.label
  }));
};

var checkbox_mapPropsToStyles = function mapPropsToStyles(_ref2) {
  var theme = _ref2.theme,
      checked = _ref2.value;
  var labelCheckedStyle = {
    width: 10,
    height: 10,
    backgroundColor: theme.foreground1,
    border: "solid 4px ".concat(theme.background2),
    cursor: 'pointer'
  };
  return {
    checkbox: {
      display: 'none',
      cursor: 'pointer'
    },
    label: checkbox_objectSpread({
      display: 'inline-block',
      width: 18,
      height: 18,
      padding: 0,
      verticalAlign: 'middle',
      marginRight: 8,
      marginTop: 2,
      backgroundColor: theme.background2,
      borderRadius: 0,
      cursor: 'pointer'
    }, checked ? labelCheckedStyle : {})
  };
};

/* harmony default export */ var components_checkbox = (context_withSettingState(checkbox_mapPropsToStyles)(checkbox_Checkbox));
// CONCATENATED MODULE: ./src/components/multibox.js
function multibox_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function multibox_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { multibox_ownKeys(Object(source), true).forEach(function (key) { multibox_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { multibox_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function multibox_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var multibox_UnwrappedMultibox = function UnwrappedMultibox(_ref) {
  var theme = _ref.theme,
      colors = _ref.colors,
      names = _ref.names,
      count = _ref.count,
      value = _ref.value,
      onChange = _ref.onChange,
      styles = _ref.styles;

  var HydratedCheckbox = function HydratedCheckbox(checked, i) {
    return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, {
      key: i
    }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
      style: styles.getContentStyle(i, checked),
      onClick: function onClick() {
        // dirty mutation below
        value[i] = !checked;
        onChange(value);
      }
    }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("input", {
      type: "checkbox",
      defaultChecked: checked,
      style: styles.checkbox
    }), names[i] ? external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
      style: styles.label
    }, names[i]) : null);
  };

  var checkboxValues = value || new Array(count).map(function (_v, i) {
    return value[i] || false;
  });
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
    style: styles.main
  }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    style: styles.innerWrapper
  }, checkboxValues.map(HydratedCheckbox)));
};

var multibox_mapPropsToStyles = function mapPropsToStyles(_ref2) {
  var theme = _ref2.theme,
      colors = _ref2.colors;
  return {
    main: {
      position: 'relative',
      width: '60%',
      display: 'inline-block',
      paddingBottom: 7
    },
    innerWrapper: {
      display: 'inline-block'
    },
    checkbox: {
      display: 'none',
      cursor: 'pointer'
    },
    label: {
      backgroundColor: theme.background2,
      paddingRight: 7,
      verticalAlign: 'middle',
      padding: 2,
      marginRight: 8,
      color: theme.text2
    },
    getContentStyle: function getContentStyle(i, checked) {
      var checkedStyle = {
        width: 10,
        height: 10,
        border: "solid 4px ".concat(theme.background2),
        cursor: 'pointer',
        backgroundColor: checked ? colors[i] : theme.foreground1
      };
      return multibox_objectSpread({
        display: 'inline-block',
        width: 18,
        height: 18,
        padding: 0,
        verticalAlign: 'middle',
        marginRight: 8,
        marginTop: 2,
        marginBottom: 1,
        backgroundColor: theme.background2,
        borderRadius: 0,
        cursor: 'pointer'
      }, checked ? checkedStyle : {});
    }
  };
};

var Multibox = context_withSettingState(multibox_mapPropsToStyles)(multibox_UnwrappedMultibox);
Multibox.propTypes = {
  colors: prop_types_default.a.array,
  names: prop_types_default.a.arrayOf(prop_types_default.a.string),
  count: prop_types_default.a.number
};
Multibox.defaultProps = {
  colors: [],
  names: [],
  count: 2
};
/* harmony default export */ var multibox = (Multibox);
// CONCATENATED MODULE: ./src/components/select.js
function select_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function select_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { select_ownKeys(Object(source), true).forEach(function (key) { select_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { select_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function select_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




var select_getOptions = function getOptions(options) {
  var keyVals = Array.isArray(options) ? options.map(function (opt) {
    return [opt, opt];
  }) : Object.entries(options);
  return keyVals.map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        val = _ref2[0],
        key = _ref2[1];

    return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("option", {
      key: key,
      value: key
    }, val);
  });
};

var select_Select = function Select(_ref3) {
  var options = _ref3.options,
      theme = _ref3.theme,
      value = _ref3.value,
      _onChange = _ref3.onChange,
      styles = _ref3.styles;
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    style: styles.traingleUp
  }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    style: styles.triangleDown
  }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("select", {
    value: value,
    onChange: function onChange(e) {
      return _onChange(e.target.value);
    },
    style: styles.select
  }, select_getOptions(options)));
};

var select_mapPropsToStyles = function mapPropsToStyles(_ref4) {
  var theme = _ref4.theme;
  var triangle = {
    borderRight: '3px solid transparent',
    borderLeft: '3px solid transparent',
    lineHeight: 20,
    position: 'absolute',
    right: '2.5%',
    zIndex: 1,
    cursor: 'auto'
  };
  return {
    select: {
      display: 'inlineBlock',
      position: 'absolute',
      width: '62%',
      paddingLeft: '1.5%',
      height: 20,
      border: 'none',
      borderRadius: 0,
      outline: 'none',
      WebkitAppearance: 'none',
      MozAppearance: 'none',
      OAppearance: 'none',
      fontFamily: 'inherit',
      backgroundColor: theme.background2,
      color: theme.text2
    },
    traingleUp: select_objectSpread({}, triangle, {
      top: 11,
      borderTop: "5px solid ".concat(theme.text2),
      borderBottom: '0px transparent'
    }),
    triangleDown: select_objectSpread({}, triangle, {
      top: 4,
      borderBottom: "5px solid ".concat(theme.text2),
      borderTop: '0px transparent'
    })
  };
};

/* harmony default export */ var components_select = (context_withSettingState(select_mapPropsToStyles)(select_Select));
// CONCATENATED MODULE: ./src/components/text.js
function text_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { text_typeof = function _typeof(obj) { return typeof obj; }; } else { text_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return text_typeof(obj); }

function text_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function text_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { text_ownKeys(Object(source), true).forEach(function (key) { text_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { text_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function text_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function text_possibleConstructorReturn(self, call) { if (call && (text_typeof(call) === "object" || typeof call === "function")) { return call; } return text_assertThisInitialized(self); }

function text_getPrototypeOf(o) { text_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return text_getPrototypeOf(o); }

function text_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function text_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) text_setPrototypeOf(subClass, superClass); }

function text_setPrototypeOf(o, p) { text_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return text_setPrototypeOf(o, p); }

function text_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




var text_Text =
/*#__PURE__*/
function (_React$Component) {
  text_inherits(Text, _React$Component);

  function Text() {
    var _getPrototypeOf2;

    var _this;

    text_classCallCheck(this, Text);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = text_possibleConstructorReturn(this, (_getPrototypeOf2 = text_getPrototypeOf(Text)).call.apply(_getPrototypeOf2, [this].concat(args)));

    text_defineProperty(text_assertThisInitialized(_this), "state", {
      focused: false
    });

    text_defineProperty(text_assertThisInitialized(_this), "render", function () {
      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("input", {
        style: text_objectSpread({}, _this.props.styles.body, {
          outline: _this.state.focused ? 'none' : undefined
        }),
        onFocus: function onFocus() {
          return _this.setState({
            focused: true
          });
        },
        onBlur: function onBlur() {
          return _this.setState({
            focused: false
          });
        },
        type: "text",
        value: _this.props.value,
        onChange: function onChange(e) {
          return _this.props.onChange(e.target.value);
        }
      });
    });

    return _this;
  }

  return Text;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

var text_mapPropsToStyles = function mapPropsToStyles(_ref) {
  var theme = _ref.theme;
  return {
    body: {
      position: 'absolute',
      paddingLeft: 6,
      height: 20,
      width: '59.5%',
      border: 'none',
      background: theme.background2,
      color: theme.text2,
      fontFamily: 'inherit'
    }
  };
};

/* harmony default export */ var components_text = (context_withSettingState(text_mapPropsToStyles)(text_Text));
// EXTERNAL MODULE: ./node_modules/simple-color-picker/src/index.js
var src = __webpack_require__(7);
var src_default = /*#__PURE__*/__webpack_require__.n(src);

// CONCATENATED MODULE: ./src/components/value.js



var value_Value = function Value(_ref) {
  var theme = _ref.theme,
      text = _ref.text,
      width = _ref.width,
      left = _ref.left;
  var styles = {
    body: {
      position: 'absolute',
      backgroundColor: theme.background2,
      paddingLeft: '1.5%',
      height: 20,
      width: width,
      display: 'inline-block',
      overflow: 'hidden',
      right: !left ? 0 : undefined,
      cursor: 'auto'
    },
    text: {
      color: theme.text2,
      display: 'inline-block',
      MozUserSelect: 'text',
      cursor: 'text',
      overflow: 'hidden',
      lineHeight: '20px',
      wordBreak: 'break-all',
      height: 20
    }
  };
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
    style: styles.body
  }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    style: styles.text
  }, text));
};

var EnhancedValue = context_withTheme(value_Value);
/* harmony default export */ var components_value = (EnhancedValue);
// CONCATENATED MODULE: ./src/components/color.js
function color_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { color_typeof = function _typeof(obj) { return typeof obj; }; } else { color_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return color_typeof(obj); }

function color_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function color_possibleConstructorReturn(self, call) { if (call && (color_typeof(call) === "object" || typeof call === "function")) { return call; } return color_assertThisInitialized(self); }

function color_getPrototypeOf(o) { color_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return color_getPrototypeOf(o); }

function color_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function color_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) color_setPrototypeOf(subClass, superClass); }

function color_setPrototypeOf(o, p) { color_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return color_setPrototypeOf(o, p); }

function color_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function color_slicedToArray(arr, i) { return color_arrayWithHoles(arr) || color_iterableToArrayLimit(arr, i) || color_nonIterableRest(); }

function color_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function color_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function color_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }






var arrayToRgb = function arrayToRgb(arr) {
  var _arr$map = arr.map(function (x) {
    return Math.round(x * 255);
  }),
      _arr$map2 = color_slicedToArray(_arr$map, 3),
      r = _arr$map2[0],
      g = _arr$map2[1],
      b = _arr$map2[2];

  return "rgb(".concat(r, ",").concat(g, ",").concat(b, ")");
};

var colorFormatters = {
  rgb: function rgb(colorPicker) {
    var _colorPicker$getRGB = colorPicker.getRGB(),
        r = _colorPicker$getRGB.r,
        g = _colorPicker$getRGB.g,
        b = _colorPicker$getRGB.b;

    return "rgb(".concat(r, ", ").concat(g, ", ").concat(b, ")");
  },
  hex: function hex(colorPicker) {
    return colorPicker.getHexString();
  },
  array: function array(colorPicker) {
    var _colorPicker$getRGB2 = colorPicker.getRGB(),
        r = _colorPicker$getRGB2.r,
        g = _colorPicker$getRGB2.g,
        b = _colorPicker$getRGB2.b;

    return [r, g, b].map(function (x) {
      return (x / 255).toFixed(2);
    });
  }
};

var color_Color =
/*#__PURE__*/
function (_React$Component) {
  color_inherits(Color, _React$Component);

  function Color() {
    var _getPrototypeOf2;

    var _this;

    color_classCallCheck(this, Color);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = color_possibleConstructorReturn(this, (_getPrototypeOf2 = color_getPrototypeOf(Color)).call.apply(_getPrototypeOf2, [this].concat(args)));

    color_defineProperty(color_assertThisInitialized(_this), "colorpickerContainer", external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createRef());

    color_defineProperty(color_assertThisInitialized(_this), "state", {
      colorHovered: false,
      pickerHovered: false
    });

    color_defineProperty(color_assertThisInitialized(_this), "formatColor", function (color) {
      return colorFormatters[_this.props.format](_this.picker);
    });

    color_defineProperty(color_assertThisInitialized(_this), "getStyles", function () {
      return {
        colorDisplay: {
          position: 'relative',
          display: 'inline-block',
          width: '12.5%',
          height: 20,
          backgroundColor: _this.props.format === 'array' ? arrayToRgb(_this.props.value) : _this.props.value
        },
        picker: {
          position: 'absolute',
          top: '20%',
          paddingTop: 20,
          left: '38%',
          bottom: '20%',
          right: '10%',
          height: 100,
          width: 100,
          zIndex: 8,
          display: _this.state.colorHovered || _this.state.pickerHovered ? undefined : 'none',
          cursor: 'default'
        }
      };
    });

    color_defineProperty(color_assertThisInitialized(_this), "render", function () {
      var styles = _this.getStyles();

      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
        style: styles.colorDisplay,
        onMouseEnter: function onMouseEnter() {
          return _this.setState({
            colorHovered: true
          });
        },
        onMouseLeave: function onMouseLeave() {
          return _this.setState({
            colorHovered: false
          });
        }
      }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
        ref: _this.colorpickerContainer,
        style: styles.picker,
        onMouseEnter: function onMouseEnter() {
          return _this.setState({
            pickerHovered: true
          });
        },
        onMouseLeave: function onMouseLeave() {
          return _this.setState({
            pickerHovered: false
          });
        }
      }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_value, {
        text: _this.props.value,
        width: "46%"
      }));
    });

    return _this;
  }

  _createClass(Color, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.picker = new src_default.a({
        el: this.colorpickerContainer.current,
        color: this.props.value,
        background: this.props.theme.background1,
        width: 125,
        height: 100
      });
      this.picker.onChange(function (newColor) {
        var formattedNewColor = _this2.formatColor(newColor);

        if (formattedNewColor !== _this2.props.value) {
          _this2.props.onChange(formattedNewColor);
        }
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.picker) {
        this.picker.setColor(this.props.value);
      }
    }
  }]);

  return Color;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

/* harmony default export */ var color = (context_withSettingState()(color_Color));
// CONCATENATED MODULE: ./node_modules/react-css-component/es/utils/namespace.js
var CONTEXT_NAMESPACE = '__react_css_component_cache';
var ID_NAMESPACE = '__react_css_component_id-';
// CONCATENATED MODULE: ./node_modules/react-css-component/es/components/StyleCacheProvider.js
var StyleCacheProvider_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function StyleCacheProvider_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function StyleCacheProvider_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function StyleCacheProvider_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function StyleCacheProvider_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var StyleCacheProvider_StyleCacheProvider = function (_Component) {
  StyleCacheProvider_inherits(StyleCacheProvider, _Component);

  function StyleCacheProvider(props, context) {
    StyleCacheProvider_classCallCheck(this, StyleCacheProvider);

    var _this = StyleCacheProvider_possibleConstructorReturn(this, (StyleCacheProvider.__proto__ || Object.getPrototypeOf(StyleCacheProvider)).call(this, props, context));

    _this.cache = {};
    return _this;
  }

  StyleCacheProvider_createClass(StyleCacheProvider, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return StyleCacheProvider_defineProperty({}, CONTEXT_NAMESPACE, this.cache);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return StyleCacheProvider;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_["Component"]);

/* harmony default export */ var components_StyleCacheProvider = (StyleCacheProvider_StyleCacheProvider);


StyleCacheProvider_StyleCacheProvider.childContextTypes = StyleCacheProvider_defineProperty({}, CONTEXT_NAMESPACE, prop_types_default.a.object);
// CONCATENATED MODULE: ./node_modules/react-css-component/es/utils/appendStyle.js
function appendStyle(id, css) {
  if (!document.head.querySelector('#' + id)) {
    var node = document.createElement('style');
    node.textContent = css;
    node.type = 'text/css';
    node.id = id;

    document.head.appendChild(node);
  }
}
// CONCATENATED MODULE: ./node_modules/react-css-component/es/components/UniversalStyle.js
var UniversalStyle_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function UniversalStyle_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function UniversalStyle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function UniversalStyle_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function UniversalStyle_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var idCache = {};

var UniversalStyle_UniversalStyle = function (_Component) {
  UniversalStyle_inherits(UniversalStyle, _Component);

  function UniversalStyle(props, context) {
    UniversalStyle_classCallCheck(this, UniversalStyle);

    var _this = UniversalStyle_possibleConstructorReturn(this, (UniversalStyle.__proto__ || Object.getPrototypeOf(UniversalStyle)).call(this, props, context));

    if (!idCache[props.css]) {
      // generating a unique style id to prevent duplicate nodes
      // within client-sides document.head
      var uniqueId = Object.keys(idCache).length;
      idCache[props.css] = ID_NAMESPACE + uniqueId;
    }

    if (context[CONTEXT_NAMESPACE]) {
      // add the rendered css to the cache to only render once during SSR
      if (!context[CONTEXT_NAMESPACE][props.css]) {
        context[CONTEXT_NAMESPACE][props.css] = true;
        _this.isFirstOccurence = true;
      }
    } else {
      // if no cache is provided, render multiple times
      _this.isFirstOccurence = true;
    }
    return _this;
  }

  UniversalStyle_createClass(UniversalStyle, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.isFirstOccurence) {
        var css = this.props.css;
        var id = idCache[css];

        // inject the style into the head if it unmounts
        // to ensure its existence for other instances
        // using the same CSS rendered
        appendStyle(id, css);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      // only actually render the style node
      // if its the first occurence
      if (this.isFirstOccurence) {
        return Object(external_root_React_commonjs_react_commonjs2_react_amd_react_["createElement"])('style', {
          dangerouslySetInnerHTML: { __html: this.props.css }
        });
      }

      return null;
    }
  }]);

  return UniversalStyle;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_["Component"]);

/* harmony default export */ var components_UniversalStyle = (UniversalStyle_UniversalStyle);


UniversalStyle_UniversalStyle.contextTypes = UniversalStyle_defineProperty({}, CONTEXT_NAMESPACE, prop_types_default.a.object);
// CONCATENATED MODULE: ./node_modules/react-css-component/es/utils/isDOMReady.js
function isDOMReady() {
  return typeof window !== 'undefined' && typeof document !== 'undefined' && document.head;
}
// CONCATENATED MODULE: ./node_modules/react-css-component/es/components/ClientStyle.js
var ClientStyle_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function ClientStyle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ClientStyle_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function ClientStyle_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ClientStyle_idCache = {};

var ClientStyle_ClientStyle = function (_Component) {
  ClientStyle_inherits(ClientStyle, _Component);

  function ClientStyle(props, context) {
    ClientStyle_classCallCheck(this, ClientStyle);

    var _this = ClientStyle_possibleConstructorReturn(this, (ClientStyle.__proto__ || Object.getPrototypeOf(ClientStyle)).call(this, props, context));

    if (!ClientStyle_idCache[props.css]) {
      // generating a unique style id to prevent duplicate nodes
      // within client-sides document.head
      var uniqueId = Object.keys(ClientStyle_idCache).length;
      ClientStyle_idCache[props.css] = ID_NAMESPACE + uniqueId;
    }

    if (isDOMReady()) {
      appendStyle(ClientStyle_idCache[props.css], props.css);
      _this.isReady = true;
    }
    return _this;
  }

  ClientStyle_createClass(ClientStyle, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!this.isReady && isDOMReady()) {
        appendStyle(ClientStyle_idCache[this.props.css], this.props.css);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return ClientStyle;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_["Component"]);

/* harmony default export */ var components_ClientStyle = (ClientStyle_ClientStyle);
// CONCATENATED MODULE: ./node_modules/react-css-component/es/index.js





// EXTERNAL MODULE: ./node_modules/is-numeric/is-numeric.js
var is_numeric = __webpack_require__(2);
var is_numeric_default = /*#__PURE__*/__webpack_require__.n(is_numeric);

// CONCATENATED MODULE: ./src/components/styles/range.js
/* harmony default export */ var range = (function (theme, id) {
  return "\n.control-panel-range-".concat(id, "::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: ").concat(theme.background2, ";\n}\n\n.control-panel-range-").concat(id, "::-webkit-slider-thumb {\n  height: 20px;\n  width: 10px;\n  background: ").concat(theme.foreground1, ";\n  cursor: ew-resize;\n  -webkit-appearance: none;\n  margin-top: 0px;\n}\n\n.control-panel-range-").concat(id, ":focus::-webkit-slider-runnable-track {\n  background: ").concat(theme.background2, ";\n  outline: none;\n}\n\n.control-panel-range-").concat(id, "::-moz-range-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: ").concat(theme.background2, ";\n}\n\n.control-panel-range-").concat(id, "::-moz-range-thumb {\n  border: 0px solid rgba(0, 0, 0, 0);\n  height: 20px;\n  width: 10px;\n  border-radius: 0px;\n  background: ").concat(theme.foreground1, ";\n  cursor: ew-resize;\n}\n\n.control-panel-range-").concat(id, "::-ms-track {\n  width: 100%;\n  height: 20px;\n  cursor: ew-resize;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n\n.control-panel-range-").concat(id, "::-ms-fill-lower {\n  background: ").concat(theme.foreground1, ";\n}\n\n.control-panel-range-").concat(id, "::-ms-fill-upper {\n  background: ").concat(theme.foreground1, ";\n}\n\n.control-panel-range-").concat(id, "::-ms-thumb {\n  width: 10px;\n  border-radius: 0px;\n  background: ").concat(theme.foreground1, ";\n  cursor: ew-resize;\n  height: 20px;\n}\n\n.control-panel-range-").concat(id, ":focus::-ms-fill-lower {\n  background: ").concat(theme.foreground1, ";\n  outline: none;\n}\n\n.control-panel-range-").concat(id, ":focus::-ms-fill-upper {\n  background: ").concat(theme.foreground1, ";\n  outline: none;\n}\n\n.control-panel-range-").concat(id, " {\n  -webkit-appearance: none;\n  width: 47.5%;\n  margin: 0px 0;\n  margin-top: 2px;\n}\n\n.control-panel-range-").concat(id, ":focus {\n  outline: none;\n}\n");
});
// CONCATENATED MODULE: ./src/error.js
function error_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { error_typeof = function _typeof(obj) { return typeof obj; }; } else { error_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return error_typeof(obj); }

function error_extends() { error_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return error_extends.apply(this, arguments); }

function error_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function error_createClass(Constructor, protoProps, staticProps) { if (protoProps) error_defineProperties(Constructor.prototype, protoProps); if (staticProps) error_defineProperties(Constructor, staticProps); return Constructor; }

function error_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function error_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function error_possibleConstructorReturn(self, call) { if (call && (error_typeof(call) === "object" || typeof call === "function")) { return call; } return error_assertThisInitialized(self); }

function error_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function error_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) error_setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, error_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return error_setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) error_setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function error_setPrototypeOf(o, p) { error_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return error_setPrototypeOf(o, p); }

function error_getPrototypeOf(o) { error_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return error_getPrototypeOf(o); }



var InvalidParamsError =
/*#__PURE__*/
function (_Error) {
  error_inherits(InvalidParamsError, _Error);

  function InvalidParamsError() {
    error_classCallCheck(this, InvalidParamsError);

    return error_possibleConstructorReturn(this, error_getPrototypeOf(InvalidParamsError).apply(this, arguments));
  }

  return InvalidParamsError;
}(_wrapNativeSuper(Error));
var error_ErrMsg = function ErrMsg(_ref) {
  var msg = _ref.msg;
  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
    style: {
      color: 'red'
    }
  }, msg);
};

var error_ErrorHandlerWrapper =
/*#__PURE__*/
function (_React$Component) {
  error_inherits(ErrorHandlerWrapper, _React$Component);

  function ErrorHandlerWrapper() {
    var _getPrototypeOf2;

    var _this;

    error_classCallCheck(this, ErrorHandlerWrapper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = error_possibleConstructorReturn(this, (_getPrototypeOf2 = error_getPrototypeOf(ErrorHandlerWrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));

    error_defineProperty(error_assertThisInitialized(_this), "state", {
      error: null
    });

    return _this;
  }

  error_createClass(ErrorHandlerWrapper, [{
    key: "componentDidCatch",
    value: function componentDidCatch(err, info) {
      this.setState({
        errMsg: err.message
      });
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.errMsg) {
        return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(error_ErrMsg, {
          msg: this.state.errMsg
        });
      } else {
        return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(this.props.Comp, this.props);
      }
    }
  }]);

  return ErrorHandlerWrapper;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

var error_withErrorHandler = function withErrorHandler(Comp) {
  return function (_ref2) {
    var props = Object.assign({}, _ref2);
    return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(error_ErrorHandlerWrapper, error_extends({
      Comp: Comp
    }, props));
  };
};

var createValidator = function createValidator(checkIfInvalid, createErrMsg) {
  return function () {
    if (!checkIfInvalid.apply(void 0, arguments)) {
      return;
    }

    throw new InvalidParamsError(createErrMsg.apply(void 0, arguments));
  };
};

var validateStepParams = createValidator(function (step, steps) {
  return !!step && !!steps;
}, function (step, steps) {
  return "Cannot specify both step and steps. Got step = ".concat(step, ", steps = ").concat(steps);
});
var validateLogStep = createValidator(is_numeric_default.a, function (step) {
  return "Log may only use steps (integer number of steps), not a step value. Got step = ".concat(step);
});
var validateLogMinMax = createValidator(function (min, max) {
  return min * max <= 0;
}, function (min, max) {
  return "Log range min/max must have the same sign and not equal zero. Got min = ".concat(min, ", max = ").concat(max);
});
var throwLogRangeError = createValidator(function (scaledVal) {
  return true;
}, function (scaledVal) {
  return "Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = ".concat(scaledVal);
});
// CONCATENATED MODULE: ./src/util.js
function util_slicedToArray(arr, i) { return util_arrayWithHoles(arr) || util_iterableToArrayLimit(arr, i) || util_nonIterableRest(); }

function util_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function util_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function util_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function util_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function util_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { util_ownKeys(Object(source), true).forEach(function (key) { util_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { util_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function util_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var getLogScalerFunctions = function getLogScalerFunctions(logmin, logmax, logsign) {
  return {
    scaleValue: function scaleValue(x) {
      return logsign * Math.exp(Math.log(logmin) + (Math.log(logmax) - Math.log(logmin)) * x / 100);
    },
    scaleValueInverse: function scaleValueInverse(y) {
      return (Math.log(y * logsign) - Math.log(logmin)) * 100 / (Math.log(logmax) - Math.log(logmin));
    }
  };
};
var util_numericOrDefault = function numericOrDefault(val, defaultVal) {
  return is_numeric_default()(val) ? val : defaultVal;
}; // lazy version

var util_numericOrDefaultElse = function numericOrDefaultElse(val, getDefaultVal) {
  return is_numeric_default()(val) ? val : getDefaultVal();
};
var createNormalDisplayOptsGetter = function createNormalDisplayOptsGetter(transformVal) {
  return function (_ref) {
    var min = _ref.min,
        max = _ref.max,
        step = _ref.step,
        value = _ref.value;
    var newMin = util_numericOrDefault(min, 0);
    var newMax = util_numericOrDefault(max, 100);
    var transformedVal = transformVal(newMin, newMax, value);
    return {
      min: newMin,
      max: newMax,
      step: util_numericOrDefault(step, (max - min) / 100),
      sliderVal: transformedVal,
      logVal: transformedVal,
      scaleValue: function scaleValue(x) {
        return x;
      }
    };
  };
};
var util_withScalerFunctions = function withScalerFunctions(logOptsGetter) {
  return function (args) {
    var min = args.min,
        max = args.max,
        step = args.step;
    validateLogMinMax(min, max);
    validateLogStep(step);
    var logsign = min > 0 ? 1 : -1;
    var logmin = Math.abs(min);
    var logmax = Math.abs(max);
    return logOptsGetter(util_objectSpread({}, args, {}, getLogScalerFunctions(logmin, logmax, logsign)));
  };
};
/**
 * Since apparently 15% of users worldwide don't have a browser that supports `Proxy`, we create
 * a partial polyfill that fits our needs.
 */

var createPolyProxy = function createPolyProxy(target, handler, setState) {
  if (typeof Proxy === 'function') {
    return new Proxy(target, handler);
  }

  var proxy = {};
  var props = Object.entries(target).reduce(function (acc, _ref2) {
    var _ref3 = util_slicedToArray(_ref2, 2),
        key = _ref3[0],
        val = _ref3[1];

    if (key in acc) {
      return acc;
    }

    return util_objectSpread({}, acc, util_defineProperty({}, key, {
      enumerable: !!Object.getOwnPropertyDescriptor(target, key).enumerable,
      get: function get() {
        return target[key];
      },
      set: function set(newVal) {
        return setState(util_defineProperty({}, key, newVal));
      }
    }));
  }, {});
  Object.defineProperties(proxy, props);
  return proxy;
};
var compose = function compose() {
  for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
    functions[_key] = arguments[_key];
  }

  return function (arg) {
    return functions.reduceRight(function (acc, fun) {
      return fun(acc);
    }, arg);
  };
};
var clamp = function clamp(x, min, max) {
  return Math.min(Math.max(x, min), max);
};
// CONCATENATED MODULE: ./src/components/range.js
function range_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { range_typeof = function _typeof(obj) { return typeof obj; }; } else { range_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return range_typeof(obj); }

function range_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = range_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function range_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function range_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function range_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function range_createClass(Constructor, protoProps, staticProps) { if (protoProps) range_defineProperties(Constructor.prototype, protoProps); if (staticProps) range_defineProperties(Constructor, staticProps); return Constructor; }

function range_possibleConstructorReturn(self, call) { if (call && (range_typeof(call) === "object" || typeof call === "function")) { return call; } return range_assertThisInitialized(self); }

function range_getPrototypeOf(o) { range_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return range_getPrototypeOf(o); }

function range_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function range_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) range_setPrototypeOf(subClass, superClass); }

function range_setPrototypeOf(o, p) { range_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return range_setPrototypeOf(o, p); }

function range_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










var getLogDisplayOpts = util_withScalerFunctions(function (_ref) {
  var min = _ref.min,
      max = _ref.max,
      step = _ref.step,
      value = _ref.value,
      scaleValue = _ref.scaleValue,
      scaleValueInverse = _ref.scaleValueInverse;
  // `value` is the logarithmic value that the user cares about.  We convert it into a value
  // from 1 to 100 in order to pass it to the slider.
  var sliderVal = scaleValueInverse(util_numericOrDefaultElse(value, function () {
    return scaleValue((min + max) / 2);
  }));

  if (sliderVal * scaleValueInverse(max) < 0) {
    throwLogRangeError(sliderVal);
  }

  return {
    min: 0,
    max: 100,
    step: 1,
    logVal: value,
    sliderVal: sliderVal,
    scaleValue: scaleValue
  };
});
var getNormalDisplayOpts = createNormalDisplayOptsGetter(function (min, max, value) {
  return util_numericOrDefault(value, (min + max) / 2);
});

var range_Range =
/*#__PURE__*/
function (_React$Component) {
  range_inherits(Range, _React$Component);

  function Range() {
    var _getPrototypeOf2;

    var _this;

    range_classCallCheck(this, Range);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = range_possibleConstructorReturn(this, (_getPrototypeOf2 = range_getPrototypeOf(Range)).call.apply(_getPrototypeOf2, [this].concat(args)));

    range_defineProperty(range_assertThisInitialized(_this), "state", {
      id: v4_default()()
    });

    return _this;
  }

  range_createClass(Range, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          scale = _this$props.scale,
          steps = _this$props.steps,
          _onChange = _this$props.onChange,
          theme = _this$props.theme,
          props = range_objectWithoutProperties(_this$props, ["scale", "steps", "onChange", "theme"]);

      validateStepParams(props.step, steps);

      var _ref2 = (scale === 'log' ? getLogDisplayOpts : getNormalDisplayOpts)(props),
          min = _ref2.min,
          max = _ref2.max,
          step = _ref2.step,
          logVal = _ref2.logVal,
          sliderVal = _ref2.sliderVal,
          scaleValue = _ref2.scaleValue; // use `steps` if provided


      var processedStep = is_numeric_default()(steps) ? (max - min) / steps : step;
      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_ClientStyle, {
        css: range(theme, this.state.id)
      }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("input", {
        className: "control-panel-range-".concat(this.state.id),
        type: "range",
        value: sliderVal,
        min: min,
        max: max,
        step: processedStep,
        onChange: function onChange(e) {
          // We take the value from the slider (range 1 to 100) and scale it into its logarithmic
          // representation before passing it into the state.
          _onChange(scaleValue(parseFloat(e.target.value)));
        }
      }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_value, {
        text: logVal,
        width: "11%"
      }));
    }
  }]);

  return Range;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

/* harmony default export */ var components_range = (error_withErrorHandler(context_withSettingState()(range_Range)));
// EXTERNAL MODULE: ./src/components/styles/interval.css
var interval = __webpack_require__(23);

// CONCATENATED MODULE: ./src/components/interval.js
function interval_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { interval_typeof = function _typeof(obj) { return typeof obj; }; } else { interval_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return interval_typeof(obj); }

function interval_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = interval_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function interval_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function interval_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function interval_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function interval_createClass(Constructor, protoProps, staticProps) { if (protoProps) interval_defineProperties(Constructor.prototype, protoProps); if (staticProps) interval_defineProperties(Constructor, staticProps); return Constructor; }

function interval_possibleConstructorReturn(self, call) { if (call && (interval_typeof(call) === "object" || typeof call === "function")) { return call; } return interval_assertThisInitialized(self); }

function interval_getPrototypeOf(o) { interval_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return interval_getPrototypeOf(o); }

function interval_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function interval_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) interval_setPrototypeOf(subClass, superClass); }

function interval_setPrototypeOf(o, p) { interval_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return interval_setPrototypeOf(o, p); }

function interval_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var interval_getLogDisplayOpts = util_withScalerFunctions(function (_ref) {
  var min = _ref.min,
      max = _ref.max,
      step = _ref.step,
      value = _ref.value,
      scaleValue = _ref.scaleValue,
      scaleValueInverse = _ref.scaleValueInverse;
  // Scale the values down from their logarithmic represenations into the range used by the slider
  var sliderVals = [scaleValueInverse(util_numericOrDefaultElse(value[0], function () {
    return min + (max - min) * 0.25;
  })), scaleValueInverse(util_numericOrDefaultElse(value[1], function () {
    return min + (max - min) * 0.75;
  }))];
  var scaledMax = scaleValue(max);

  if (scaleValue(sliderVals[0]) * scaledMax <= 0 || scaleValue(sliderVals[1]) * scaledMax <= 0) {
    throwLogRangeError("[".concat(sliderVals[0], ",").concat(sliderVals[1], "]"));
  }

  return {
    min: 0,
    max: 100,
    step: 1,
    sliderVal: sliderVals,
    logVal: value,
    scaleValue: scaleValue
  };
});
var interval_getNormalDisplayOpts = createNormalDisplayOptsGetter(function (min, max, value) {
  return [util_numericOrDefault(value[0], (min + max) * 0.25), util_numericOrDefault(value[1], (min + max) * 0.75)];
});

var interval_Range =
/*#__PURE__*/
function (_React$Component) {
  interval_inherits(Range, _React$Component);

  function Range() {
    var _getPrototypeOf2;

    var _this;

    interval_classCallCheck(this, Range);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = interval_possibleConstructorReturn(this, (_getPrototypeOf2 = interval_getPrototypeOf(Range)).call.apply(_getPrototypeOf2, [this].concat(args)));

    interval_defineProperty(interval_assertThisInitialized(_this), "input", external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createRef());

    interval_defineProperty(interval_assertThisInitialized(_this), "state", {
      activeIndex: -1,
      value: null,
      min: null,
      max: null,
      step: null
    });

    interval_defineProperty(interval_assertThisInitialized(_this), "mouseX", function (ev) {
      return ev.pageX - _this.input.current.getBoundingClientRect().left;
    });

    interval_defineProperty(interval_assertThisInitialized(_this), "calculateFraction", function (evt, value, min, max) {
      return {
        fraction: clamp(_this.mouseX(evt) / _this.input.current.offsetWidth, 0, 1),
        lofrac: (value[0] - min) / (max - min),
        hifrac: (value[1] - min) / (max - min)
      };
    });

    interval_defineProperty(interval_assertThisInitialized(_this), "setActiveValue", function (evt) {
      if (_this.state.activeIndex === -1) {
        return;
      }

      var _this$computedScaleIn = _this.computedScaleInfo,
          value = _this$computedScaleIn.value,
          min = _this$computedScaleIn.min,
          max = _this$computedScaleIn.max,
          step = _this$computedScaleIn.step,
          scaleValue = _this$computedScaleIn.scaleValue;

      var _this$calculateFracti = _this.calculateFraction(evt, value, min, max),
          fraction = _this$calculateFracti.fraction,
          hifrac = _this$calculateFracti.hifrac,
          lofrac = _this$calculateFracti.lofrac; // Clip against the other bound:


      var clippedFraction = _this.state.activeIndex === 0 ? Math.min(hifrac, fraction) : Math.max(lofrac, fraction); // Compute and quantize the new value:

      var newValue = scaleValue(min + Math.round((max - min) * clippedFraction / step) * step); // Make sure it doesn't overrun the slider or pass the other side

      var clampTo = _this.state.activeIndex === 0 ? [_this.props.min, value[1]] : [value[0], _this.props.max];
      value[_this.state.activeIndex] = clamp(newValue, clampTo[0], clampTo[1]);

      _this.props.onChange(value);
    });

    return _this;
  }

  interval_createClass(Range, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var mouseHandlerWrapper = function mouseHandlerWrapper(fn) {
        return function (evt) {
          if (!_this2.state.dragging) {
            return;
          }

          _this2.setActiveValue(evt);

          fn && fn();
        };
      }; // Install event listeners on the document for mouse movement and release


      document.addEventListener('mousemove', mouseHandlerWrapper());
      document.addEventListener('mouseup', mouseHandlerWrapper(function () {
        return _this2.setState({
          dragging: false,
          activeIndex: -1
        });
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          scale = _this$props.scale,
          steps = _this$props.steps,
          theme = _this$props.theme,
          props = interval_objectWithoutProperties(_this$props, ["scale", "steps", "theme"]);

      var _ref2 = (scale === 'log' ? interval_getLogDisplayOpts : interval_getNormalDisplayOpts)(props),
          min = _ref2.min,
          max = _ref2.max,
          step = _ref2.step,
          sliderVal = _ref2.sliderVal,
          logVal = _ref2.logVal,
          scaleValue = _ref2.scaleValue;

      validateStepParams(props.step, steps); // These values need to be available for the global mouse event listeners, so we set them
      // as a class property.  This doesn't trigger re-renderings since we're not using `setState`.

      this.computedScaleInfo = {
        value: logVal,
        min: min,
        max: max,
        step: is_numeric_default()(steps) ? (max - min) / steps : step,
        scaleValue: scaleValue
      };
      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
        className: "control-panel-interval",
        style: {
          backgroundColor: theme.background2
        },
        ref: this.input,
        onMouseDown: function onMouseDown(evt) {
          _this3.setState({
            dragging: true
          }); // Figure out which side is being clicked and adjust the active index accodingly


          var _this3$calculateFract = _this3.calculateFraction(evt, sliderVal, min, max),
              fraction = _this3$calculateFract.fraction,
              hifrac = _this3$calculateFract.hifrac,
              lofrac = _this3$calculateFract.lofrac; // This is just for making decisions, so perturb it ever so slightly just in case the
          // bounds are numerically equal.


          var lodiff = Math.abs(lofrac - Math.abs(max - min) * 1e-15 - fraction);
          var hidiff = Math.abs(hifrac + Math.abs(max - min) * 1e-15 - fraction); // Determine which one is closer

          _this3.setState({
            activeIndex: lodiff < hidiff ? 0 : 1
          });
        }
      }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("span", {
        className: "control-panel-interval-handle",
        style: {
          left: (sliderVal[0] - min) / (max - min) * 100 + '%',
          right: 100 - (sliderVal[1] - min) / (max - min) * 100 + '%',
          backgroundColor: theme.foreground1
        }
      })), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_value, {
        text: logVal[0],
        width: "11%",
        left: true
      }), external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_value, {
        text: logVal[1],
        width: "11%"
      }));
    }
  }]);

  return Range;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

/* harmony default export */ var components_interval = (error_withErrorHandler(context_withSettingState()(interval_Range)));
// CONCATENATED MODULE: ./src/components/custom.js
function custom_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = custom_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function custom_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






var custom_CustomComponentInner = function CustomComponentInner(_ref) {
  var Comp = _ref.Comp,
      renderContainer = _ref.renderContainer,
      props = custom_objectWithoutProperties(_ref, ["Comp", "renderContainer"]);

  return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(Comp, props);
};
/**
 * Takes a prop, `Comp`, which is a component that will be rendered as a control panel input.
 *
 * If the `renderContainer` prop is `true` (default), a `Container` will be rendered as the parent
 * of this element.  That gives you the label on the left and assumes your styling is going to be
 * pretty close to that of the rest of control-panel's imputs.  If you have a highly custom
 * component, you may want to instead handle that all yourself in which you should pass
 * `renderContainer={false}` to `CustomComponent`.
 *
 * The `Comp` child will be passed the following props:
 * - `theme`
 * - `value`
 * - `onChange`
 */


var CustomComponent = compose(context_withSettingState(), error_withErrorHandler)(custom_CustomComponentInner);
/* harmony default export */ var custom = (CustomComponent);
// EXTERNAL MODULE: ./src/components/styles/base.css
var base = __webpack_require__(25);

// EXTERNAL MODULE: ./src/components/styles/color.css
var styles_color = __webpack_require__(27);

// CONCATENATED MODULE: ./src/index.js
/* concated harmony reexport Button */__webpack_require__.d(__webpack_exports__, "Button", function() { return components_button; });
/* concated harmony reexport Checkbox */__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return components_checkbox; });
/* concated harmony reexport Multibox */__webpack_require__.d(__webpack_exports__, "Multibox", function() { return multibox; });
/* concated harmony reexport Select */__webpack_require__.d(__webpack_exports__, "Select", function() { return components_select; });
/* concated harmony reexport Text */__webpack_require__.d(__webpack_exports__, "Text", function() { return components_text; });
/* concated harmony reexport Color */__webpack_require__.d(__webpack_exports__, "Color", function() { return color; });
/* concated harmony reexport Range */__webpack_require__.d(__webpack_exports__, "Range", function() { return components_range; });
/* concated harmony reexport Interval */__webpack_require__.d(__webpack_exports__, "Interval", function() { return components_interval; });
/* concated harmony reexport Custom */__webpack_require__.d(__webpack_exports__, "Custom", function() { return custom; });
/* concated harmony reexport themes */__webpack_require__.d(__webpack_exports__, "themes", function() { return themes; });
/* concated harmony reexport Value */__webpack_require__.d(__webpack_exports__, "Value", function() { return components_value; });
/* concated harmony reexport Container */__webpack_require__.d(__webpack_exports__, "Container", function() { return context_Container; });
/* concated harmony reexport withSettingState */__webpack_require__.d(__webpack_exports__, "withSettingState", function() { return context_withSettingState; });
/* concated harmony reexport withTheme */__webpack_require__.d(__webpack_exports__, "withTheme", function() { return context_withTheme; });
/* concated harmony reexport Label */__webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
function src_extends() { src_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return src_extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function src_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function src_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function src_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function src_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function src_createClass(Constructor, protoProps, staticProps) { if (protoProps) src_defineProperties(Constructor.prototype, protoProps); if (staticProps) src_defineProperties(Constructor, staticProps); return Constructor; }

function src_possibleConstructorReturn(self, call) { if (call && (src_typeof(call) === "object" || typeof call === "function")) { return call; } return src_assertThisInitialized(self); }

function src_getPrototypeOf(o) { src_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return src_getPrototypeOf(o); }

function src_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function src_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) src_setPrototypeOf(subClass, superClass); }

function src_setPrototypeOf(o, p) { src_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return src_setPrototypeOf(o, p); }

function src_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function src_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { src_ownKeys(Object(source), true).forEach(function (key) { src_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { src_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function src_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function src_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { src_typeof = function _typeof(obj) { return typeof obj; }; } else { src_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return src_typeof(obj); }































var settingTypeMapping = {
  range: components_range,
  text: components_text,
  checkbox: components_checkbox,
  color: color,
  button: components_button,
  select: components_select,
  multibox: multibox,
  interval: components_interval,
  custom: custom
};
var VALID_POSITIONS = ['top-right', 'top-left', 'bottom-right', 'bottom-left'];
/**
 *
 * @param {string | { left?: number, right?: number, bottom?: number, top?: number }} position
 */

var parsePositionPropToOffsets = function parsePositionPropToOffsets(position) {
  if (src_typeof(position) === 'object') {
    return position;
  }

  if (!position) {
    return {};
  }

  return src_objectSpread({}, position.includes('top') ? {
    top: 8
  } : {}, {}, position.includes('left') ? {
    left: 8
  } : {}, {}, position.includes('right') ? {
    right: 8
  } : {}, {}, position.includes('bottom') ? {
    bottom: 8
  } : {});
};

var src_ControlPanel =
/*#__PURE__*/
function (_React$Component) {
  src_inherits(ControlPanel, _React$Component);

  function ControlPanel(props) {
    var _this;

    src_classCallCheck(this, ControlPanel);

    _this = src_possibleConstructorReturn(this, src_getPrototypeOf(ControlPanel).call(this, props));

    src_defineProperty(src_assertThisInitialized(_this), "lastSettings", null);

    src_defineProperty(src_assertThisInitialized(_this), "handleMouseDown", function (evt) {
      if ((evt.target.className || '').includes('draggable')) {
        _this.setState({
          dragging: true,
          mouseDownCoords: {
            x: evt.pageX,
            y: evt.pageY
          },
          mouseDownPos: src_objectSpread({}, _this.state.position)
        });
      }
    });

    src_defineProperty(src_assertThisInitialized(_this), "handleMouseDrag", function (evt) {
      if (_this.state.dragging) {
        var diffX = evt.pageX - _this.state.mouseDownCoords.x;
        var diffY = evt.pageY - _this.state.mouseDownCoords.y;
        var position = (typeof _this.props.position === 'string' ? _this.props.position : '') || '';
        var offset = position.includes('left') ? {
          left: _this.state.mouseDownPos.left + diffX
        } : {
          right: _this.state.mouseDownPos.right - diffX
        };

        var newPosition = src_objectSpread({}, _this.state.position, {}, offset);

        if (_this.state.mouseDownPos.top !== undefined) {
          newPosition.top = _this.state.mouseDownPos.top + diffY;
        } else if (_this.state.mouseDownPos.bottom !== undefined) {
          newPosition.bottom = _this.state.mouseDownPos.bottom - diffY;
        }

        _this.setState({
          position: newPosition
        });
      }
    });

    var _position = parsePositionPropToOffsets(props.position);

    _this.state = {
      data: props.initialState || props.state || {},
      position: _position
    };
    _this.derivedSettings = [];

    if (!_this.props.settings) {
      return src_possibleConstructorReturn(_this);
    }

    var _this$computeDerivedS = _this.computeDerivedSettings(_this.props.settings),
        derivedInitialState = _this$computeDerivedS.derivedInitialState;

    _this.state.data = src_objectSpread({}, _this.state.data, {}, derivedInitialState);
    return _this;
  }

  src_createClass(ControlPanel, [{
    key: "computeDerivedSettings",
    value: function computeDerivedSettings() {
      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      if (this.lastSettings === settings) {
        return {
          derivedSettings: this.derivedSettings
        };
      }

      this.lastSettings = settings;

      var _settings$reduce = settings.reduce(function (_ref, _ref2) {
        var derivedInitialState = _ref.derivedInitialState,
            derivedSettings = _ref.derivedSettings;

        var type = _ref2.type,
            label = _ref2.label,
            initial = _ref2.initial,
            props = src_objectWithoutProperties(_ref2, ["type", "label", "initial"]);

        var SettingComponent = settingTypeMapping[type];

        if (!SettingComponent) {
          return {
            derivedInitialState: derivedInitialState,
            derivedSettings: derivedSettings
          };
        }

        return {
          derivedInitialState: src_objectSpread({}, derivedInitialState, src_defineProperty({}, label, initial)),
          derivedSettings: [].concat(_toConsumableArray(derivedSettings), [{
            SettingComponent: SettingComponent,
            label: label,
            props: props
          }])
        };
      }, {
        derivedInitialState: {},
        derivedSettings: []
      }),
          derivedSettings = _settings$reduce.derivedSettings,
          derivedInitialState = _settings$reduce.derivedInitialState;

      this.derivedSettings = derivedSettings;
      return {
        derivedSettings: derivedSettings,
        derivedInitialState: derivedInitialState
      };
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.draggable) {
        document.addEventListener('mousemove', this.handleMouseDrag); // `setTimeout` here in order to avoid re-rendering the component and potentially discarding
        // new data from child settings that were changed as a result of this.

        document.addEventListener('mouseup', function () {
          return setTimeout(function () {
            return _this2.setState({
              dragging: false
            });
          });
        });
      }

      if (!this.props.contextCb) {
        return;
      }

      var handler = {
        get: function get(state, prop) {
          return _this2.state.data[prop];
        },
        set: function set(state, prop, val) {
          return _this2.setState({
            data: src_objectSpread({}, _this2.state.data, src_defineProperty({}, prop, val))
          });
        }
      };

      var setData = function setData(data) {
        return _this2.setState({
          data: src_objectSpread({}, _this2.state.data, {}, data)
        });
      };

      this.props.contextCb(createPolyProxy(this.state.data, handler, setData));
    }
  }, {
    key: "getState",
    value: function getState() {
      return this.props.state ? this.props.state : this.state.data;
    }
  }, {
    key: "indicateChange",
    value: function indicateChange(label, newVal) {
      var newState = src_objectSpread({}, this.getState(), {}, this.state.data, src_defineProperty({}, label, newVal));

      this.props.onChange(label, newVal, newState);

      if (!this.props.state) {
        this.setState({
          data: newState
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          width = _this$props.width,
          suppliedTheme = _this$props.theme,
          _this$props$position = _this$props.position,
          position = _this$props$position === void 0 ? '' : _this$props$position,
          title = _this$props.title,
          children = _this$props.children,
          style = _this$props.style,
          settings = _this$props.settings;
      var theme = is_string_default()(suppliedTheme) ? themes[suppliedTheme] || themes['dark'] : suppliedTheme;
      var state = this.getState();

      var combinedStyle = src_objectSpread({
        display: 'inline-block',
        background: theme.background1,
        width: width,
        padding: 14,
        paddingBottom: 8,
        opacity: 0.95,
        position: VALID_POSITIONS.includes(position) || typeof position !== 'string' ? 'absolute' : undefined
      }, this.state.position || {}, {
        cursor: this.props.draggable ? 'move' : undefined
      }, style);

      var _this$computeDerivedS2 = this.computeDerivedSettings(settings),
          derivedSettings = _this$computeDerivedS2.derivedSettings;

      return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement("div", {
        className: "control-panel draggable",
        onMouseDown: this.props.draggable ? this.handleMouseDown : undefined,
        style: combinedStyle
      }, external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_context.Provider, {
        value: {
          state: state,
          theme: theme,
          indicateChange: this.indicateChange.bind(this)
        }
      }, title ? external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(components_title, {
        title: title
      }) : null, children, derivedSettings.map(function (_ref3) {
        var SettingComponent = _ref3.SettingComponent,
            label = _ref3.label,
            props = _ref3.props;
        return external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.createElement(SettingComponent, src_extends({
          key: label,
          label: label
        }, props, {
          value: state[label],
          onChange: function onChange(newVal) {
            return _this3.setState({
              data: src_objectSpread({}, _this3.state.data, src_defineProperty({}, label, newVal))
            });
          }
        }));
      })));
    }
  }]);

  return ControlPanel;
}(external_root_React_commonjs_react_commonjs2_react_amd_react_default.a.Component);

src_ControlPanel.propTypes = {
  initialState: prop_types_default.a.object,
  onChange: prop_types_default.a.func,
  theme: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]),
  title: prop_types_default.a.string,
  width: prop_types_default.a.number,
  position: prop_types_default.a.oneOfType([prop_types_default.a.oneOf(VALID_POSITIONS), prop_types_default.a.string]),
  style: prop_types_default.a.object,
  settings: prop_types_default.a.arrayOf(prop_types_default.a.object),
  state: prop_types_default.a.object,
  contextCb: prop_types_default.a.func,
  draggable: prop_types_default.a.bool
};
src_ControlPanel.defaultProps = {
  width: 300,
  theme: 'dark',
  onChange: function onChange() {},
  style: {}
};
/* harmony default export */ var src_0 = __webpack_exports__["default"] = (src_ControlPanel);

/***/ })
/******/ ]);
});
//# sourceMappingURL=index.js.map